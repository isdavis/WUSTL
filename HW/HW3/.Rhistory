clusplot(distMat, k_cluster6$cluster) # Q: I am not sure whether this is a good plot. I also drew it when K=2, 3, and 4, they didn't look good either
pdf(file="cluster6.pdf")
clusplot(distMat, k_cluster6$cluster) # Q: I am not sure whether this is a good plot. I also drew it when K=2, 3, and 4, they didn't look good either
dev.off()
pdf(file="optimalCluster.pdf")
plot(1:20, wss, type="b", xlab="Number of Clusters",
ylab="Within cluster sum of squares",
main="Finding an Optimal Number of Clusters",
pch=20, cex=2)
dev.off()
k_cluster$centers
center <- k_cluster$centers
center
center <- as.matrix(k_cluster$centers)
center
k_cluster$cluster
k_cluster$cluster[k_cluster$cluster == 1,]
k_cluster$cluster[,k_cluster$cluster == 1]
k_cluster$cluster[k_cluster$cluster==1]
index <- k_cluster$cluster[k_cluster$cluster==1]
index
k_cluster$cluster[which(k_cluster$cluster== 10), ]
k_cluster$cluster[which(k_cluster$cluster== 10)]
k_cluster$cluster[which(k_cluster$cluster== 1)]
which(k_cluster$cluster== 1)
index <- which(k_cluster$cluster== 1)
k_cluster$cluster[index]
k_cluster$centers[k]
index <- which(k_cluster$cluster== k)
k <- 1
index <- which(k_cluster$cluster== k)
k_cluster$centers[index]
k_cluster$centers[,index]
index <- which(k_cluster$cluster== k)
theta_k <- k_cluster$centers[,index]
theta_NOTk <- k_cluster$centers[,-index]
theta_NOTk
DiffFunc <- function(k){
if (k>5 | k<1){
print("K should be larger than or equal to 1 and less than or equal to 5")
} else {
index <- which(k_cluster$cluster== k)
theta_k <- k_cluster$centers[,index]
theta_NOTk <- k_cluster$centers[,-index]
Diff <- theta_k - (colSums(theta_NOTk)/5-1)
}
return(as.data.frame(Diff))
}
DiffFunc(4)
DiffFunc(6)
DiffFunc(0)
DiffFunc(4)
theta_k
(colSums(theta_NOTk)/4)
theta_k - (colSums(theta_NOTk)/4)
k_cluster$cluster
k_cluster$centers
k_cluster$centers[2,]
k_cluster$centers[1,]
DiffFunc <- function(k){
if (k>5 | k<1){
print("K should be larger than or equal to 1 and less than or equal to 5")
} else {
theta_k <- k_cluster$cluster[k,]
theta_NOTk <- k_cluster$cluster[-k,]
Diff <- theta_k - (colSums(theta_NOTk)/4)
}
return(as.data.frame(Diff))
}
DiffFunc(4)
DiffFunc(6)
theta_k
k_cluster$cluster[4,]
DiffFunc <- function(k){
if (k>5 | k<1){
print("K should be larger than or equal to 1 and less than or equal to 5")
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- theta_k - (colSums(theta_NOTk)/4)
}
return(as.data.frame(Diff))
}
DiffFunc(4)
DiffFunc(6)
Diff.sort <- Diff[order(Diff, decreasing = TRUE), ]
DiffFunc <- function(k){
if (k>5 | k<1){
print("K should be larger than or equal to 1 and less than or equal to 5")
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- theta_k - (colSums(theta_NOTk)/4)
Diff.sort <- Diff[order(Diff, decreasing = TRUE), ]
}
return(as.data.frame(Diff.sort))
}
DiffFunc(4)
DiffFunc(6)
function (x, row.names = NULL, optional = FALSE, ...)
Diff
Diff <- theta_k - (colSums(theta_NOTk)/4)
theta_k <- k_cluster$centers[1,]
theta_NOTk <- k_cluster$centers[-1,]
Diff <- theta_k - (colSums(theta_NOTk)/4)
Diff
Diff[order(Diff, decreasing = TRUE), ]
Diff[order(Diff, decreasing = TRUE)]
DiffFunc <- function(k){
if (k>5 | k<1){
print("K should be larger than or equal to 1 and less than or equal to 5")
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- theta_k - (colSums(theta_NOTk)/4)
Diff.sort <- Diff[order(Diff, decreasing = TRUE)]
}
return(as.data.frame(Diff.sort))
}
DiffFunc(4)
DiffFunc(6)
function (x, row.names = NULL, optional = FALSE, ...)
DiffFunc(4)[1:10,]
colnames(Diff.sort)
Diff.sort
Diff.sort <- Diff[order(Diff, decreasing = TRUE)]
Diff.sort
colnames(Diff.sort <- Diff[order(Diff, decreasing = TRUE)]
})
colnames(Diff.sort <- Diff[order(Diff, decreasing = TRUE)])
length(Diff)
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff
Diff.sort <- Diff[order(Diff, decreasing = TRUE)]
Diff.sort <- Diff[order(Diff, decreasing = TRUE),]
Diff.sort
k_cluster
colnames(k_cluster)
View(mat)
unigramNYTimes <- read.csv("DTM_NYTimes.csv", header=T,row.names=NULL)
# check data
str(unigramNYTimes)
# there is a row.names column so I am moving it to dsk column
unigramNYTimes[,2] <- NULL
colnames(unigramNYTimes)[1] <- "dsk"
mat <- unigramNYTimes[,-1] # remove dsk column for the kmean analysis
t(mat)
mat <- t(mat)
View(mat)
distMat <- dist(mat, method = "euclidean")
distMat <- as.matrix(distMat)
wss <- (nrow(distMat)-1)*sum(apply(distMat,2,var))
for (i in 2:20) wss[i] <- sum(kmeans(distMat,
centers=i)$withinss)
plot(1:20, wss, type="b", xlab="Number of Clusters",
ylab="Within cluster sum of squares",
main="Finding an Optimal Number of Clusters",
pch=20, cex=2)
pdf(file="optimalCluster.pdf")
plot(1:20, wss, type="b", xlab="Number of Clusters",
ylab="Within cluster sum of squares",
main="Finding an Optimal Number of Clusters",
pch=20, cex=2)
dev.off()
library(cluster)
n.clust<- 5
set.seed(8675309) ##complicated objective function
k_cluster<- kmeans(distMat, centers = n.clust)
k_cluster
table(k_cluster$cluster)
clusplot(distMat, k_cluster$cluster) # Q: I am not sure whether this is a good plot. I also drew it when K=2, 3, and 4, they didn't look good either
pdf(file="cluster.pdf")
clusplot(distMat, k_cluster$cluster) # Q: I am not sure whether this is a good plot. I also drew it when K=2, 3, and 4, they didn't look good either
dev.off()
n.clust<- 6
set.seed(8675309) ##complicated objective function
k_cluster6<- kmeans(distMat, centers = n.clust)
k_cluster6
clusplot(distMat, k_cluster6$cluster)
pdf(file="cluster6.pdf")
clusplot(distMat, k_cluster6$cluster)
dev.off()
k_cluster$centers
center <- k_cluster$centers
DiffFunc <- function(k){
if (k>5 | k<1){
print("K should be larger than or equal to 1 and less than or equal to 5")
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff.sort <- Diff[order(Diff, decreasing = TRUE)]
}
return(as.data.frame(Diff.sort))
}
DiffFunc(6)
DiffFunc(6)
DiffFunc <- function(k){
if (k>5 | k<1){
return(print("K should be larger than or equal to 1 and less than or equal to 5"))
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff.sort <- Diff[order(Diff, decreasing = TRUE)]
}
return(as.data.frame(Diff.sort))
}
DiffFunc(6)
DiffFunc(0)
DiffFunc(4)
theta_k <- k_cluster$centers[4,]
theta_NOTk <- k_cluster$centers[-4,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff
Diff[order(Diff, decreasing = TRUE)]
Diff[order(Diff, decreasing = TRUE),]
Diff.sort <- Diff[order(Diff, decreasing = TRUE),]
Diff.sort
Diff.sort[1:10]
Diff[order(Diff, decreasing = TRUE),]
colnames(Diff[order(Diff, decreasing = TRUE),][1:10])
Diff[order(Diff, decreasing = TRUE),][1:10]
Diff[,order(Diff, decreasing = TRUE)][1:10]
Diff
head(Diff)
which(k_cluster$cluster==2)
which(k_cluster$cluster==2)
sample(which(k_cluster$cluster==2),1)
k_cluster
View(distMat)
View(mat)
View(unigramNYTimes)
View(mat)
View(distMat)
rm(list=ls())
#load data
setwd('~/Dropbox/2017_Classes/Text-Analysis/WUSTL/HW/HW3/')
# read data
unigramNYTimes <- read.csv("DTM_NYTimes.csv", header=T,row.names=NULL)
# check data
str(unigramNYTimes)
# there is a row.names column so I am moving it to dsk column
unigramNYTimes[,2] <- NULL
colnames(unigramNYTimes)[1] <- "dsk"
mat <- unigramNYTimes[,-1] # remove dsk column for the kmean analysis
tmat <- t(mat) # each row is a word, each column is a document ?
distMat <- dist(mat, method = "euclidean")
distMat <- as.matrix(distMat)
distMat2 <- dist(tmat, method="euclidean")
distMat2
View(distMat)
distMat <- dist(mat, method = "euclidean")
distMat <- as.matrix(distMat)
wss <- (nrow(distMat)-1)*sum(apply(distMat,2,var))
for (i in 2:20) wss[i] <- sum(kmeans(distMat,
centers=i)$withinss)
pdf(file="optimalCluster.pdf")
plot(1:20, wss, type="b", xlab="Number of Clusters",
ylab="Within cluster sum of squares",
main="Finding an Optimal Number of Clusters",
pch=20, cex=2)
dev.off()
plot(1:20, wss, type="b", xlab="Number of Clusters",
ylab="Within cluster sum of squares",
main="Finding an Optimal Number of Clusters",
pch=20, cex=2)
library(cluster)
n.clust<- 5
set.seed(8675309) ##complicated objective function
k_cluster<- kmeans(distMat, centers = n.clust)
k_cluster
table(k_cluster$cluster)
clusplot(distMat, k_cluster$cluster) # Q: I am not sure whether this is a good plot. I also drew it when K=2, 3, and 4, they didn't look good either
pdf(file="cluster.pdf")
clusplot(distMat, k_cluster$cluster) # Q: I am not sure whether this is a good plot. I also drew it when K=2, 3, and 4, they didn't look good either
dev.off()
n.clust<- 6
set.seed(8675309) ##complicated objective function
k_cluster6<- kmeans(distMat, centers = n.clust)
k_cluster6
clusplot(distMat, k_cluster6$cluster)  # does this plot should look better than previous one?
pdf(file="cluster6.pdf")
clusplot(distMat, k_cluster6$cluster)  # does this plot should look better than previous one?
dev.off()
k_cluster$centers
DiffFunc <- function(k){
if (k>5 | k<1){
return(print("K should be larger than or equal to 1 and less than or equal to 5"))
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff.sort <- colnames(Diff[,order(Diff, decreasing = TRUE)][1:10])
}
return(as.data.frame(Diff.sort))
}
Diff
DiffFunc(4)
DiffFunc(6)
DiffFunc(0)
theta_k <- k_cluster$centers[1,]
theta_NOTk <- k_cluster$centers[-1,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
View(Diff)
tmat <- t(mat) # each row is a word, each column is a document ?
distMat <- dist(tmat, method = "euclidean")
distMat <- as.matrix(distMat)
wss <- (nrow(distMat)-1)*sum(apply(distMat,2,var))
for (i in 2:20) wss[i] <- sum(kmeans(distMat,
centers=i)$withinss)
pdf(file="optimalCluster.pdf")
plot(1:20, wss, type="b", xlab="Number of Clusters",
ylab="Within cluster sum of squares",
main="Finding an Optimal Number of Clusters",
pch=20, cex=2)
dev.off()
library(cluster)
n.clust<- 5
set.seed(8675309) ##complicated objective function
k_cluster<- kmeans(distMat, centers = n.clust)
k_cluster
table(k_cluster$cluster)
clusplot(distMat, k_cluster$cluster) # Q: I am not sure whether this is a good plot. I also drew it when K=2, 3, and 4, they didn't look good either
pdf(file="cluster.pdf")
clusplot(distMat, k_cluster$cluster) # Q: I am not sure whether this is a good plot. I also drew it when K=2, 3, and 4, they didn't look good either
dev.off()
n.clust<- 6
set.seed(8675309) ##complicated objective function
k_cluster6<- kmeans(distMat, centers = n.clust)
k_cluster6
pdf(file="cluster6.pdf")
clusplot(distMat, k_cluster6$cluster)  # does this plot should look better than previous one?
dev.off()
DiffFunc <- function(k){
if (k>5 | k<1){
return(print("K should be larger than or equal to 1 and less than or equal to 5"))
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff.sort <- colnames(Diff[,order(Diff, decreasing = TRUE)][1:10])
}
return(as.data.frame(Diff.sort))
}
DiffFunc(4)
DiffFunc(6)
DiffFunc(0)
View(distMat)
theta_k <- k_cluster$centers[4,]
theta_NOTk <- k_cluster$centers[-4,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff
Diff.sort <- colnames(Diff[,order(Diff, decreasing = TRUE)][1:10])
Diff[,order(Diff, decreasing = TRUE)][1:10]
Diff[order(Diff, decreasing = TRUE),][1:10]
colnames(Diff[order(Diff, decreasing = TRUE)][1:10])
DiffFunc <- function(k){
if (k>5 | k<1){
return(print("K should be larger than or equal to 1 and less than or equal to 5"))
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff.sort <- colnames(Diff[order(Diff, decreasing = TRUE),][1:10])
}
return(as.data.frame(Diff.sort))
}
DiffFunc(4)
colnames(Diff[order(Diff, decreasing = TRUE),][1:10])
Diff
Diff[order(Diff, decreasing = TRUE),][1:10]
DiffFunc <- function(k){
if (k>5 | k<1){
return(print("K should be larger than or equal to 1 and less than or equal to 5"))
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff.sort <- rownames(Diff[order(Diff, decreasing = TRUE),][1:10])
}
return(as.data.frame(Diff.sort))
}
DiffFunc(4)
Diff[order(Diff, decreasing = TRUE),][1:10]
Diff.sort <- as.data.frame(Diff[order(Diff, decreasing = TRUE),])
Diff.sort
Diff
View(Diff)
library(dplyr)
Diff <- add_rownames(Diff, "VALUE")
View(Diff)
install.packages("tibble")
library(tibble)
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff <- rownames_to_column(Diff, "words")
Diff.sort <- as.data.frame(Diff[order(Diff, decreasing = TRUE),])
View(Diff.sort)
colnames(Diff[,2]) <- "dist"
colnames(Diff[,2])
colnames(Diff[,2]) <- "dist"
colnames(Diff) <- c("words", "dist")
Diff.sort <- as.data.frame(Diff$[order(Diff, decreasing = TRUE),])
Diff.sort <- as.data.frame(Diff$dist[,order(Diff$dist, decreasing = TRUE)])
Diff.sort <- as.data.frame(Diff$dist[order(Diff$dist, decreasing = TRUE),])
Diff.sort <- as.data.frame(Diff$dist[order(Diff$dist, decreasing = TRUE)])
View(Diff)
View(Diff.sort)
View(Diff)
Diff.sort <- as.data.frame(Diff[order(Diff$dist, decreasing = TRUE)])
Diff.sort <- as.data.frame(Diff[order(Diff$dist, decreasing = TRUE),])
top10 <- Diff.sort$words[1:10]
top10
Diff.sort[1:10]
top10 <- as.data.frame(Diff.sort[1:10,])
top10
DiffFunc <- function(k){
if (k>5 | k<1){
return(print("K should be larger than or equal to 1 and less than or equal to 5"))
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff <- rownames_to_column(Diff, "words")
colnames(Diff) <- c("words", "dist")
Diff.sort <- as.data.frame(Diff[order(Diff$dist, decreasing = TRUE)])
top10 <- as.data.frame(Diff.sort[1:10,])
}
return(top10)
}
DiffFunc(4)
library(tibble)
DiffFunc <- function(k){
if (k>5 | k<1){
return(print("K should be larger than or equal to 1 and less than or equal to 5"))
} else {
theta_k <- k_cluster$centers[k,]
theta_NOTk <- k_cluster$centers[-k,]
Diff <- as.data.frame(theta_k - (colSums(theta_NOTk)/4))
Diff <- rownames_to_column(Diff, "words")
colnames(Diff) <- c("words", "dist")
Diff.sort <- as.data.frame(Diff[order(Diff$dist, decreasing = TRUE),])
top10 <- as.data.frame(Diff.sort[1:10,])
}
return(top10)
}
DiffFunc(4)
DiffFunc(6)
DiffFunc(0)
DiffFunc(3)
sample(which(k_cluster$cluster==2),1)
k_cluster
k_cluster$cluster
sample(which(k_cluster$cluster==2),1)
k_cluster$cluster
set.seed(1234)
sample(which(k_cluster$cluster==2),1)
readNYT = read.table("123.txt")
setwd('~/Dropbox/2017_Classes/Text-Analysis/WUSTL/HW/HW3/')
set.seed(1234)
sample(which(k_cluster$cluster==2),1)
mydata = read.table("123.txt")
readNYT = read.table("~/Dropbox/2017_Classes/Text-Analysis/WUSTL/HW/HW3/123.txt")
readNYT = read.table("123.txt",sep="\t")
readNYT = read.table("123.txt",header=FALSE)
res <- readLines(system.file("123.txt", package="MASS"))
fileName <- "123.txt"
conn <- file(fileName,open="r")
linn <-readLines(conn)
for (i in 1:length(linn)){
print(linn[i])
}
close(conn)
sample(which(k_cluster$cluster==1),1)
index <- sample(which(k_cluster$cluster==1),1)
mat[index,]
fileName <- paste(index, ".txt")
fileName
paste(index,".txt")
index <- as.numeric(index)
paste(index,".txt")
paste(index,".txt", sep='')
ReadNYTFunc <- function(m){
index <- sample(which(k_cluster$cluster==m),1)
fileName <- paste(index,".txt", sep='')
conn <- file(fileName,open="r")
linn <-readLines(conn)
for (i in 1:length(linn)){
print(linn[i])
}
close(conn)
}
ReadNYTFunc(2)
which(k_cluster$cluster==2),1)
which(k_cluster$cluster==2)
index
index <- sample(which(k_cluster$cluster==m),1)
index <- sample(which(k_cluster$cluster==2),1)
index
# as a function,
ReadNYTFunc <- function(m){
set.seed(1234)
index <- sample(which(k_cluster$cluster==m),1)
fileName <- paste(index,".txt", sep='')
conn <- file(fileName,open="r")
linn <-readLines(conn)
for (i in 1:length(linn)){
print(linn[i])
}
close(conn)
}
ReadNYTFunc(2)
